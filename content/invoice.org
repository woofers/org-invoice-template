
#+Title: Invoice Template
#+Author: Jaxson Van Doorn

#+OPTIONS: toc:nil title:nil num:nil

#+LaTeX_HEADER: \usepackage{../src/config}

#+INCLUDE: info.org

#+CONSTANTS: rate=20

#+BEGIN_EXPORT latex
\pair{Services}{}
\vspace{-0.5in}
#+END_EXPORT

#+TBLNAME: services
#+BEGIN: clocktable :scope ("timesheet.org") :maxlevel 3
#+ATTR_LATEX: :align Hllllll :environment longtable
#+TBLFM: @2$6..@>$6=vsum($2..$5)*$rate;t::@1$6=string("Amount ($)")::@2$7..@>$7=$rate::@1$7=string("Rate ($)")
#+END:

#+BEGIN: table
#+ATTR_LaTeX: :center nil
| Total Due ($) |
|---------------|
| VX.ZY         |
#+TBLFM: @2$1=remote(services, @2$6)
#+END:

* Lisp :noexport:

#+NAME: startup
#+BEGIN_SRC emacs-lisp
(defun org-invoice-generate ()
  (interactive)

  ; Activate Org Column Advice
  (defadvice org-table-goto-column
    (before
     always-make-new-columns
     (n &optional on-delim force)
     activate)
    "Always adds new columns for table formulae"
    (setq force t))

  ; Save Cursor Position
  (point-to-register ?a)

  ; Ignore Lisp Code in Search
  (beginning-of-buffer)
  (search-forward "#+NAME: startup")
  (let ((pos (point)))
    (beginning-of-buffer)

    ; Search for LaTex Attributes
    (search-forward "#+TBLNAME: services" pos)
    (let ((latex (condition-case nil
      (search-forward "#+ATTR_LATEX:" pos)
      (error nil))))

      ; Copy LaTeX Attributes
      ; (`org-prepare-dblock` removes them
      ;  as they are inside the dblock)
      (if latex
        (progn
          (move-beginning-of-line 1)
          (kill-line)))

      ; Generate Services Breakdown
      (search-backward "#+TBLNAME: services")
      (forward-line 1)
      (org-dblock-update)

      ; Restore LaTeX Attributes
      (if latex
        (progn
          (forward-line 1)
          (yank)
          (newline)))
    )

    ; Update Balance Due
    (search-forward "#+BEGIN: table")
    (forward-line 2)
    (org-table-recalculate)
  )

  ; Deactivate Org Column Advice
  (ad-deactivate 'org-table-goto-column)

  ; Restore Cursor Position
  (jump-to-register ?a))

#+END_SRC

# Local Variables:
# eval: (progn (org-babel-goto-named-src-block "startup") (org-babel-execute-src-block) (outline-hide-sublevels 1))
# End:
